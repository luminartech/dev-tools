[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.docformatter]
in-place = true
recursive = true
wrap-summaries = 88
wrap-descriptions = 81

[tool.flake8]
max-line-length = 120

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.poetry]
name = "dev-tools"
version = "0.9.0"
description = ""
authors = ["BRE <bre@luminartech.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
pre-commit = ">=3.5.0"
pyjson5 = ">=1.6.8"

[tool.poetry.group.dev.dependencies]
pytest = "==8.3.5"
pytest-cov = "==5.0.0"
pyfakefs = "==5.7.4"
ruamel-yaml = "==0.18.10"

[tool.poetry.scripts]
check-jira-reference-in-todo = "dev_tools.check_jira_reference_in_todo:main"
check-number-of-lines-count = "dev_tools.check_number_of_lines_count:main"
check-ownership = "dev_tools.check_ownership:main"
check-shellscript-set-options = "dev_tools.check_shellscript_set_options:main"
check-useless-exclude-paths-hooks = "dev_tools.check_useless_exclude_paths_hooks:main"
configure-vscode-for-bazel = "dev_tools.configure_vscode_for_bazel:main"
generate-hook-docs = "dev_tools.generate_hook_docs:main"
sync-vscode-config = "dev_tools.sync_vscode_config:main"
whoowns = "dev_tools.find_owner:main"

[tool.pylint.FORMAT]
max-line-length = 120

[tool.pylint.MASTER]
# Add files or directories to the blacklist. They should be base names, not paths.
ignore = ["venv"]

[tool.pylint."MESSAGES CONTROL"]
# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED
confidence = ""
disable = [
  "missing-function-docstring",
  "import-error" # disabled since pre-commit runs pylint in a separate venv
]

[tool.pytest.ini_options]
addopts = "--cov-report term-missing --cov=dev_tools -vv"
testpaths = [
  "tests"
]

[tool.ruff]
fix = true
unsafe-fixes = true
target-version = "py38"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "A00",
  "ANN001",
  "COM812",
  "D",
  "E501", # Line length is the task of the formatter
  "FA100",
  "ISC001", # Conflicts with formatter
  "S101",
  "S603",
  "T201"
]

[tool.vulture]
min_confidence = 100
ignore_decorators = ["@pytest.fixture"]
exclude = [
  "*test_*.py" # vulture doesn't understand pytest fixtures
]
